<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint https://camel.apache.org/schema/blueprint/camel-blueprint-2.20.2.xsd">
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- CXF servers -->
    <jaxrs:server address="/ESB/panel/sincronizaGrupos/"
        id="rsPanelServices" staticSubresourceResolution="true">
        <jaxrs:serviceBeans>
            <ref component-id="restService"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- Undelete cuenta gmail -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/member/retrieve"
        id="retrieveMember" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.sincronizaGrupos.api.restclient.RetrieveMemberEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- Undelete cuenta gmail -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/member/addMember"
        id="addMember" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.sincronizaGrupos.api.restclient.AddMemberEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <bean
        class="cl.uandes.panel.sincronizaGrupos.api.resources.SincronizaGruposRestService" id="restService"/>
    <bean
        class="cl.uandes.panel.sincronizaGrupos.procesor.RecuperaDeBanner" id="recuperaDeBanner"/>
    <bean
        class="cl.uandes.panel.sincronizaGrupos.procesor.ArmaDatosProceso" id="armaDatosProceso"/>
    <bean
        class="cl.uandes.panel.sincronizaGrupos.procesor.ProcesaCuenta" id="procesaCuenta"/>
    <bean
        class="cl.uandes.panel.sincronizaGrupos.procesor.GeneraRespuesta" id="generaRespuesta"/>
    <bean
        class="cl.uandes.panel.sincronizaGrupos.procesor.PreparaTemplateMail" id="preparaTemplateMail"/>
    <bean
        class="cl.uandes.panel.sincronizaGrupos.procesor.PreparaDatosMail" id="preparaDatosMail"/>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <http-conf:conduit name="*.http-conduit">
        <http-conf:client ReceiveTimeout="6000000"/>
        <!-- 1 minuto -->
    </http-conf:conduit>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- ==================================================================================================== -->
    <reference availability="mandatory"
        filter="(osgi.jndi.service.name=bannerds)" id="bannerDataSource" interface="javax.sql.DataSource"/>
    <!-- ==================================================================================================== -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <camelContext id="serv-sincroniza-grupos" trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="properties" location="file:${karaf.home}/etc/cl.uandes.panelv2.cfg"/>
        <route id="_readjson">
            <from id="_promService" uri="direct:start?timeout=-1"/>
            <to id="_to1" uri="seda:procese"/>
        </route>
        <!-- ==================================================================================================== -->
        <route id="_procese">
            <from id="_from1" uri="seda:procese"/>
            <setHeader headerName="request" id="_setHeaderRequest">
                <simple>${body}</simple>
            </setHeader>
            <log id="_log3" message="queda en header: ${header.request.mailTO}"/>
            <choice id="_choice2">
                <when id="_when2">
                    <simple>${header.request.operacion} == 'procesar'</simple>
                    <to id="_to2" uri="sql-stored:pck_funciones.prd_crea_wrk_grupos_sincronizar(OUT java.sql.Types.VARCHAR out_resultado)?dataSource=#bannerDataSource"/>
                    <log id="_log6" message="salida prd: ${body} en la tabla"/>
                </when>
            </choice>
            <to id="_qry" uri="sql:select key,group_name,login_name from wrk_grupos_sincronizar where actualizado=0 order by group_name,login_name?dataSource=#bannerDataSource"/>
            <process id="_recuperaDeBanner" ref="recuperaDeBanner"/>
            <log id="_log1" message="hay ${header.mapXGrupo.size} elementos en la lista"/>
            <process id="_generaRespuesta" ref="generaRespuesta"/>
        </route>
        <!-- ==================================================================================================== -->
        <route id="_lupea">
            <from id="_fromProcese" uri="seda:lupea"/>
            <setHeader headerName="request" id="_setHeaderMailTo">
                <simple>${body}</simple>
            </setHeader>
            <setHeader headerName="countAgregados" id="_setcountAgregados">
                <simple resultType="java.lang.Integer">0</simple>
            </setHeader>
            <setHeader headerName="countProcesados" id="_setcountProcesados">
                <simple resultType="java.lang.Integer">0</simple>
            </setHeader>
            <camel:setHeader headerName="funcion" id="_setHeaderFuncion">
                <constant>Procesar sincronizaci√≥n de grupos</constant>
            </camel:setHeader>
            <log id="_log4" message="seda:lupea - queda en header: ${header.request}"/>
            <loop doWhile="true" id="_loopProcesaDatos">
                <simple>${header.mapXGrupo.size} &gt; 0</simple>
                <process id="_armaDatosProceso" ref="armaDatosProceso"/>
                <loop doWhile="true" id="_loop1">
                    <simple>${header.listaCuentasGrupo.size} &gt; 0</simple>
                    <process id="_procesaCuenta" ref="procesaCuenta"/>
                    <choice id="_choice1">
                        <when id="_when1">
                            <simple>${header.resultadoPC} == 'OK'</simple>
                            <log id="_log2" message="sql:update wrk_grupos_sincronizar set actualizado=1, accion=${header.accion} where key=${header.keyDTO}"/>
                            <to id="_to3" uri="sql:update wrk_grupos_sincronizar set actualizado=1, accion=:#${header.accion} where key=:#${header.keyDTO}?dataSource=#bannerDataSource"/>
                        </when>
                    </choice>
                </loop>
            </loop>
            <to id="_generaMail" uri="seda:generaMail"/>
        </route>
        <!-- ==================================================================================================== -->
        <route id="_generaMailRoute">
            <from id="_from2" uri="seda:generaMail"/>
            <log id="_log5" message="funcion: ${header.funcion} countReactivados: ${header.countReactivados}"/>
            <process id="_preparaTemplateMail" ref="preparaTemplateMail"/>
            <to id="creaCuerpo" uri="velocity:templateMail.vm?contentCache=true"/>
            <process id="_preparaDatosMail" ref="preparaDatosMail"/>
            <!-- manda email -->
            <setHeader headerName="cc" id="_setHeaderMailCC">
                <simple>{{serv.mailPanel.mail_cc}}</simple>
            </setHeader>
            <setHeader headerName="contentType" id="_setHeaderContent">
                <simple>text/html;charset=ISO-8859-1</simple>
            </setHeader>
            <to id="_to4" uri="smtps://smtp.gmail.com?username={{serv.mailPanel.mail_username}}&amp;password={{serv.mailPanel.mail_password}}&amp;from={{serv.mailPanel.mail_from}}&amp;contentType=text/html;charset=ISO-8859-1"/>
        </route>
    </camelContext>
</blueprint>

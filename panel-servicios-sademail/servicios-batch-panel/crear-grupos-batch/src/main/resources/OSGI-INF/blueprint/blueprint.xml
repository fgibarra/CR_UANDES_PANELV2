<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint https://camel.apache.org/schema/blueprint/camel-blueprint-2.20.2.xsd">
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- CXF servers -->
    <jaxrs:server address="/ESB/panel/servicioBatch/crearGrupos/"
        id="rsPanelServices" staticSubresourceResolution="true">
        <jaxrs:serviceBeans>
            <ref component-id="restService"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- CXF clients -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/group/retrieve/{groupname}"
        id="rsRetrieveGrupo" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/group/create"
        id="rsCreateGrupo" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/group/delete"
        id="rsDeleteGrupo" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/member/addMember"
        id="rsAgregarMember" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/member/deleteMember"
        id="rsSacarMember" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/idCuentaUsuario"
        id="rsConsultarIdCuenta" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/members/retrieveMembers"
        id="rsRetrieveAllMembers" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/member/deleteMember"
        id="rsDeleteMember" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.GrupoEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- Consultar nickname gmail -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/nickName/retrieve/{username}"
        id="consultaNickNameGMail" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.ConsultasGMailEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- Consultar cuenta gmail -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/gmailServices/user/retrieve?loginName=${loginName}"
        id="consultaGMail" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.ConsultasGMailEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/serviciosAD/validarUsuario"
        id="rsADvalidarUsuario" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.ConsultaADEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <!-- __________________________________________________________________________________________________ -->
    <!-- __________________________________________________________________________________________________ -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/servicioBatch/schedulerPanel/finProceso"
        id="rsFinProceso" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.crearGrupos.api.restclient.SchedulerEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- __________________________________________________________________________________________________ -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.api.resources.CrearGruposRestService" id="restService">
        <property name="funcionCrear" value="{{crear-grupos-gmail.nocturno.funcion}}"/>
        <property name="funcionSincroniza" value="{{sincroniza-grupos-gmail.nocturno.funcion}}"/>
        <property name="proceso" value="{{crear-grupos-gmail.proceso}}"/>
    </bean>
    <bean class="cl.uandes.panel.comunes.procesor.InicializarProceso" id="inicialiceCrearGrupos">
        <property name="registraInicio" ref="registrosComunes"/>
    </bean>
    <!--
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.InicialiceCrearGrupos" id="inicialiceCrearGrupos">
		<property name="registraInicio" ref="registrosComunes"/>
	</bean>
	-->
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.GruposThread" id="gruposThread">
        <property name="gmailServices" value="{{crear-grupos-gmail.uri-gmailServices}}"/>
        <property name="dominio" value="{{panelv3.dominio}}"/>
        <property name="registrosBD" ref="registrosComunes"/>
    </bean>
    <!--
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.InicialiceCrearGruposVigentes" id="inicialiceCrearGruposVigentes"/>
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.InicialiceCrearGruposVigentesPosgrado" id="inicialiceCrearGruposVigentesPosgrado"/>
	-->
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.GruposVigentesThread" id="gruposVigentesThread"/>
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.GruposVigentesPosgradoThread" id="gruposVigentesPosgradoThread"/>
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.GruposSinMiembrosThread" id="gruposSinMiembros">
        <property name="gmailServices" value="{{crear-grupos-gmail.uri-gmailServices}}"/>
        <property name="registrosBD" ref="registrosComunes"/>
    </bean>
    <bean class="cl.uandes.panel.servicio.crearGrupos.bean.GeneraDatos" id="generaDatos">
        <property name="propNumberPrueba" value="{{crear-grupos-gmail.numero-pruebas}}"/>
    </bean>
    <bean
        class="cl.uandes.panel.servicio.crearGrupos.procesor.ActualizaMiResultados" id="actualizaMiResultados">
        <property name="panelServices" value="{{crear-grupos-gmail.uri-serviciosPanel}}"/>
        <property name="registrosBD" ref="registrosComunes"/>
    </bean>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <bean
        class="cl.uandes.panel.servicio.sincronizarGrupos.procesor.SincronizarGruposAction" id="sincronizarGruposAction">
        <property name="gmailServices" value="{{crear-grupos-gmail.uri-gmailServices}}"/>
        <property name="registrosBD" ref="registrosComunes"/>
    </bean>
    <bean class="cl.uandes.panel.comunes.procesor.InicializarProceso" id="inicialiceSincronizarGrupos">
        <property name="registraInicio" ref="registrosComunes"/>
    </bean>
    <!--
    <bean
        class="cl.uandes.panel.servicio.sincronizarGrupos.procesor.InicialiceSincronizarGrupos" id="inicialiceSincronizarGrupos"/>
    -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <bean class="cl.uandes.panel.comunes.bean.RegistrosComunes" id="registrosComunes">
        <argument index="0" value="crear-grupos-batch"/>
        <!-- reemplazar artifactId -->
    </bean>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- ==================================================================================================== -->
    <reference availability="mandatory"
        filter="(osgi.jndi.service.name=bannerds)" id="bannerDataSource" interface="javax.sql.DataSource"/>
    <!-- ==================================================================================================== -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <camelContext id="crear-grupos-gmail" trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="properties" location="file:${karaf.home}/etc/cl.uandes.panelv2.cfg"/>
        <!-- -->
        <route id="_readjson">
            <from id="_promService" uri="direct:start"/>
            <log id="_log2" message="(L242)queda en el body: ${body}"/>
            <to id="_to1" uri="mock:end"/>
        </route>
        <!--
        <route id="_fromInicio">
            <from id="_partida" uri="timer://foo?repeatCount=1"/>
            <bean id="_bean1" method="setBody" ref="generaDatos"/>
            <log id="_log3" message="(L189)queda en el body: ${body}"/>
            <to id="_to7" uri="direct:proceso"/>
        </route>
-->
        <!-- ================================================================================================= -->
        <!-- El pre proceso del requerimiento que viene desde el request	CREAR GRUPOS-->
        <!-- ================================================================================================= -->
        <route id="_procesoRoute">
            <from id="_proceso" uri="direct:proceso"/>
            <log id="_log6" message="(L258)En ruta _procesoRoute header.listaOperaciones.size: ${header.listaOperaciones.size}"/>
            <loop doWhile="true" id="_loop1">
                <simple>${header.listaOperaciones.size} &gt; 0</simple>
                <!--
				- inicializar proceso en funcion de la tabla KCO_FUNCIONES
				- invocar store-procedure que genera los grupos (crear) y miembros a agregar/eliminar
				- interactuar con azure para crear grupos y agregar/eliminar miembros
				- generar el resultado
				-->
                <bean id="_bean2" method="getListaOperaciones" ref="generaDatos"/>
                <log id="_log4" message="(L268)procesar ${header.proceso}"/>
                <!--
                <log id="_log8" message="(L209)sql:select key, funcion, min_thread, max_thread, parametro, comentario, ultima_ejecucion from kco_funciones where funcion=${header.proceso}"/>
                <to id="_to4" uri="sql:classpath:sql/getKcoFuncion.sql?dataSource=#bannerDataSource"/>
				-->
                <process id="_recuperaDatosInicializar" ref="inicialiceCrearGrupos"/>
                <choice id="_choice4">
                    <when id="_when8">
                        <simple>${header.inicializado}</simple>
                        <to id="_to4" uri="direct:procesaFuncion"/>
                    </when>
                    <otherwise id="_otherwise4">
                        <log id="_log7" message="proceso ${header.proceso} no pudo ser inicializado"/>
                        <to id="_avisaTerminaCrearCuentas" uri="cxfrs:bean:rsFinProceso?timeout=-1"/>
                        <to id="_to5" uri="mock:end"/>
                    </otherwise>
                </choice>
            </loop>
        </route>
        <!-- ================================================================================================= -->
        <route id="_procesaFuncion">
            <from id="_from8" uri="direct:procesaFuncion"/>
            <log id="_log15" message="(L290)despues de _recuperaDatosInicializar: DatosKcoFunciones_${header.DatosKcoFunciones} ResultadoFuncion: ${header.ResultadoFuncion} key: ${header.key}"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${header.proceso} == 'crear_grupos'</simple>
                    <setHeader headerName="emailPermission" id="_setHeader2">
                        <constant>Anyone</constant>
                    </setHeader>
                    <log id="_log9" message="(L297)invoca prd_puebla_grupos_generales - values funcion ${header.proceso} (${header.DatosKcoFunciones.periodo}, ${header.emailPermission}, ${header.key})"/>
                    <to id="_to8" uri="sql-stored:classpath:sql/prd_puebla_grupos_generales.sql?dataSource=#bannerDataSource"/>
                    <to id="_to9" uri="direct:crearGrupos"/>
                </when>
                <when id="_when2">
                    <simple>${header.proceso} == 'grupos_inprogress'</simple>
                    <setHeader headerName="emailPermission" id="_setHeader3">
                        <constant>Owner</constant>
                    </setHeader>
                    <log id="_log10" message="(L306)invoca prd_puebla_grupos_vigentes - values funcion ${header.proceso} (${header.emailPermission}, ${header.key})"/>
                    <to id="_to10" uri="sql-stored:classpath:sql/prd_puebla_grupos_vigentes.sql?dataSource=#bannerDataSource"/>
                    <to id="_to2" uri="direct:crearGruposVigentes"/>
                </when>
                <when id="_when3">
                    <simple>${header.proceso} == 'grupos_inprogress_postgrado'</simple>
                    <setHeader headerName="emailPermission" id="_setHeader4">
                        <constant>Owner</constant>
                    </setHeader>
                    <log id="_log11" message="(L315)invoca prd_puebla_grupos_postgrado - values funcion ${header.proceso} (${header.emailPermission}, ${header.key})"/>
                    <to id="_to11" uri="sql-stored:classpath:sql/prd_puebla_grupos_postgrado.sql?dataSource=#bannerDataSource"/>
                    <to id="_to3" uri="direct:crearGruposVigentesPosgrado"/>
                </when>
                <otherwise id="_otherwise1">
                    <log id="_log5" message="(L320)Operacion desconocida"/>
                    <bean id="_bean3" method="setOperacionDesconocida" ref="restService"/>
                </otherwise>
            </choice>
        </route>
        <!-- ================================================================================================= -->
        <!--  El proceso de los distintos tipos de grupos -->
        <!-- ================================================================================================= -->
        <!--                               direct:crearGrupos                                                  -->
        <!-- ================================================================================================= -->
        <route id="_crearGrupos">
            <from id="_crearGruposRoute" uri="direct:crearGrupos"/>
            <!-- recuperar los grupos a procesar -->
            <log id="_log1" message="(L333) proceso:${header.proceso} recuperar los grupos a procesar: sql:classpath:sql/getGruposRegulares.sql"/>
            <to id="_to12" uri="sql:classpath:sql/getGruposRegulares.sql?dataSource=#bannerDataSource"/>
            <bean id="_bean4" method="factoryGrupos" ref="generaDatos"/>
            <to id="_to13" uri="direct:procesaGrupos"/>
            <to id="_eliminarGruposSinMiembros1" uri="direct:eliminarGruposSinMiembros"/>
            <to id="_to7" uri="direct:termina"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               direct:crearGruposVigentes                                          -->
        <!-- ================================================================================================= -->
        <route id="_crearGruposVigentes">
            <from id="_crearGruposVigentesRoute" uri="direct:crearGruposVigentes"/>
            <log id="_log3" message="(L345) proceso:${header.proceso} recuperar los grupos a procesar: sql:classpath:sql/getGruposVigentes.sql"/>
            <to id="_to14" uri="sql:classpath:sql/getGruposVigentes.sql?dataSource=#bannerDataSource"/>
            <bean id="_bean5" method="factoryGrupos" ref="generaDatos"/>
            <to id="_to15" uri="direct:procesaGrupos"/>
            <process id="_process4" ref="gruposVigentesThread"/>
            <to id="_eliminarGruposSinMiembros2" uri="direct:eliminarGruposSinMiembros"/>
            <to id="_to19" uri="direct:termina"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               direct:crearGruposVigentesPosgrado                                  -->
        <!-- ================================================================================================= -->
        <route id="_crearGruposVigentesPosgrado">
            <from id="_crearGruposVigentesPosgradoRoute" uri="direct:crearGruposVigentesPosgrado"/>
            <log id="_log17" message="(L358) proceso:${header.proceso} recuperar los grupos a procesar: sql:classpath:sql/getGruposPosgrado.sql"/>
            <to id="_to16" uri="sql:classpath:sql/getGruposPosgrado.sql?dataSource=#bannerDataSource"/>
            <bean id="_bean6" method="factoryGrupos" ref="generaDatos"/>
            <to id="_to17" uri="direct:procesaGrupos"/>
            <process id="_process6" ref="gruposVigentesPosgradoThread"/>
            <to id="_eliminarGruposSinMiembros3" uri="direct:eliminarGruposSinMiembros"/>
            <to id="_to20" uri="direct:termina"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               direct:eliminarGruposSinMiembros                                    -->
        <!-- ================================================================================================= -->
        <route id="_eliminarGruposSinMiembrosRoute">
            <from id="_from3" uri="direct:eliminarGruposSinMiembros"/>
            <log id="_log18" message="(L371)eliminar members no activos y no creados: sql/deleteNoActivosNocreados.sql"/>
            <to id="_to18" uri="sql:classpath:sql/deleteNoActivosNocreados.sql?dataSource=#bannerDataSource"/>
            <log id="_log18" message="(L373)eliminarGruposSinMiembros: sql/getGruposSinMiembros.sql"/>
            <choice id="_choice2">
                <when id="_when4">
                    <simple>${header.proceso} == 'crear_grupos'</simple>
                    <to id="_to21" uri="sql:classpath:sql/getGruposSinMiembrosRegulares.sql?dataSource=#bannerDataSource"/>
                </when>
                <when id="_when5">
                    <simple>${header.proceso} == 'grupos_inprogress'</simple>
                    <to id="_to22" uri="sql:classpath:sql/getGruposSinMiembrosVigentes.sql?dataSource=#bannerDataSource"/>
                </when>
                <when id="_when6">
                    <simple>${header.proceso} == 'grupos_inprogress_postgrado'</simple>
                    <to id="_to23" uri="sql:classpath:sql/getGruposSinMiembrosPosgrado.sql?dataSource=#bannerDataSource"/>
                </when>
                <otherwise id="_otherwise2">
                    <log id="_log21" message="(L388)Operacion desconocida"/>
                    <bean id="_bean1" method="setOperacionDesconocida" ref="restService"/>
                </otherwise>
            </choice>
            <bean id="_bean13" method="factoryGrupos" ref="generaDatos"/>
            <process id="_process1" ref="gruposSinMiembros"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               direct:termina                                                      -->
        <!-- ================================================================================================= -->
        <route id="_route1">
            <from id="_from4" uri="direct:termina"/>
            <log id="_log19" message="(L400)avisa termino proceso:${header.proceso} - DatosKcoFunciones: ${header.DatosKcoFunciones} y hay en el body: ${body}"/>
            <process id="_process3" ref="actualizaMiResultados"/>
            <to id="_final" uri="mock:end"/>
        </route>
        <!-- ================================================================================================= -->
        <!--  Actions usados por los process -->
        <!-- ================================================================================================= -->
        <!--                               direct:getKey                                                       -->
        <!-- ================================================================================================= -->
        <!--
		<route id="_getKey">
            <from id="_procesoInicialiceCrearGrupos1" uri="direct:getKey"/>
            <log id="_log12" message="(L335)antes del sequence"/>
            <to id="_to5" uri="sql:select HIBERNATE_SEQUENCE.nextval from dual?dataSource=#bannerDataSource"/>
            <log id="_log7" message="(L337)despues del sql: ${body}"/>
            <setHeader headerName="BD_KEY" id="_setHeader1">
                <simple>${body.get(0)[NEXTVAL]}</simple>
            </setHeader>
        </route>
		-->
        <!-- ================================================================================================= -->
        <!--                               direct:creaResultado                                                -->
        <!-- ================================================================================================= -->
        <route id="_creaResult">
            <from id="_procesoInicialiceCrearGrupos2" uri="direct:creaResultado"/>
            <log id="_log13" message="(L425)creaResult: values (${header.key},${header.funcion},${header.horaComienzo},${header.minThreads},${header.maxThreads}) "/>
            <log id="_log14" message="(L426)creaResult: body: ${body} "/>
            <to id="_to6" uri="jdbc:bannerDataSource?useHeadersAsParameters=true"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               direct:procesaGrupos                                                -->
        <!-- ================================================================================================= -->
        <route id="_procesaGruposRoute">
            <from id="_procesaGruposAction" uri="direct:procesaGrupos"/>
            <log id="_log20" message="(L434) Entrando a direct:procesaGrupos para procesar ${header.listaGrupos.size} elementos"/>
            <loop doWhile="true" id="_loop2">
                <simple>${header.listaGrupos.size} &gt; 0</simple>
                <choice id="_choice5">
                    <when id="_when9">
                        <simple>${header.countThread.getCounter} &gt; 12</simple>
                        <delay id="_delay3">
                            <constant>1000</constant>
                        </delay>
                        <log id="_log8" message="(L443)Esperando se desocupe thread (usadas= ${header.countThread.getCounter})"/>
                    </when>
                    <otherwise id="_otherwise5">
                        <bean id="_bean7"
                            method="getGrupoFromListaGrupos" ref="generaDatos"/>
                        <log id="_log12" message="(L448)el grupo a procesar: ${header.grupoGmail}"/>
                        <to id="_to28" uri="seda:procesaEsteGrupo"/>
                    </otherwise>
                </choice>
            </loop>
        </route>
        <!-- ================================================================================================= -->
        <!--                               seda:procesaEsteGrupo                                                -->
        <!-- ================================================================================================= -->
        <route id="_procesaEsteGrupo">
            <from id="_from9" uri="seda:procesaEsteGrupo"/>
            <log id="_log16" message="(L459) procesa elemento numero: ${header.listaCuentas.size} keyResultado=${header.keyResultado}"/>
            <process id="_process2" ref="gruposThread"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               direct:sacaMiembroAction                                                -->
        <!-- ================================================================================================= -->
        <route id="_procesaSacarMiembrosRoute">
            <from id="_procesaGruposThreadSaca" uri="direct:sacaMiembroAction"/>
            <onException id="_onException1">
                <exception>cl.uandes.panel.comunes.servicios.exceptions.ProcesaMiembroException</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <setHeader headerName="exception" id="_setHeader1">
                    <simple>${exception}</simple>
                </setHeader>
                <setBody id="_setBody1">
                    <method method="setErrorProcesoMiembro" ref="gruposThread"/>
                </setBody>
                <log id="_log26" message="(L478-${threadName}) atrapo un exception. en el body queda: ${body}"/>
                <bean id="_bean17" method="errorProcesoMiembro" ref="gruposThread"/>
            </onException>
            <log id="_log27" message="(L481-${threadName}) sacarMiembro ${header.DatosMemeberDTO.request} "/>
            <bean id="_bean18" method="sacarMiembroAction" ref="gruposThread"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               direct:agregaMiembroAction                                                -->
        <!-- ================================================================================================= -->
        <route id="_procesaAgregarRoute">
            <from id="_procesaGruposThreadAgrega" uri="direct:agregaMiembroAction"/>
            <onException id="_onException2">
                <exception>cl.uandes.panel.comunes.servicios.exceptions.ProcesaMiembroException</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <setHeader headerName="exception" id="_setHeader1">
                    <simple>${exception}</simple>
                </setHeader>
                <setBody id="_setBody1">
                    <method method="setErrorProcesoMiembro" ref="gruposThread"/>
                </setBody>
                <log id="_log28" message="(L500) atrapo un exception. en el body queda: ${body}"/>
                <bean id="_bean19" method="errorProcesoMiembro" ref="gruposThread"/>
            </onException>
            <log id="_log29" message="(L503-${threadName}) agregarMiembro ${header.DatosMemeberDTO.request} "/>
            <bean id="_bean20" method="agregarMiembroAction" ref="gruposThread"/>
        </route>
        <!-- ================================================================================================= -->
        <!-- direct:incrementaResultado  -->
        <!-- ================================================================================================= -->
        <route id="_route4">
            <from id="_from7" uri="direct:incrementaResultado"/>
            <log id="_log31" message="(L511) incrementar keyResultado: ${header.keyResultado} idContador: ${header.idContador} p_operacion: ${header.operacion}"/>
            <to id="_to27" uri="sql-stored:classpath:sql/prd_operaContadorMiResultados.sql?dataSource=#bannerDataSource"/>
        </route>
        <!-- ================================================================================================= -->
        <!-- 	SINCRONIZA GRUPOS-->
        <!-- El proceso del requerimiento que viene desde el request	-->
        <!-- ================================================================================================= -->
        <route id="_route2">
            <from id="_from5" uri="direct:sincronizar"/>
            <log id="_log22" message="(L520) sincronizar: request=${header.request}"/>
            <loop doWhile="true" id="_loop3">
                <simple>${header.listaOperaciones.size} &gt; 0</simple>
                <bean id="_bean14" method="getListaOperaciones" ref="generaDatos"/>
                <process id="_process5" ref="inicialiceSincronizarGrupos"/>
                <log id="_log23" message="(L525) proceso: ${header.tipoGrupo}"/>
                <to id="_to24" uri="sql:classpath:sql_s/getGruposXproceso.sql?dataSource=#bannerDataSource"/>
                <bean id="_bean15" method="factoryGruposSincronizar" ref="generaDatos"/>
                <log id="_log24" message="(L528) grupos a sincronizar= ${header.listaGruposSincronizar.size}"/>
                <loop doWhile="true" id="_loop4">
                    <simple>${header.listaGruposSincronizar.size} &gt; 0</simple>
                    <choice id="_choice3">
                        <when id="_when7">
                            <simple>${header.countThread.getCounter} &gt; 14</simple>
                            <delay id="_delay1">
                                <constant>1000</constant>
                            </delay>
                        </when>
                        <otherwise id="_otherwise3">
                            <bean id="_bean16"
                                method="getGrupoSincronizar" ref="generaDatos"/>
                            <to id="_to25" uri="seda:sincronizaGrupo"/>
                        </otherwise>
                    </choice>
                </loop>
            </loop>
            <loop doWhile="true" id="_loop4">
                <simple>${header.countThread.getCounter} &gt; 0</simple>
                <delay id="_delay2">
                    <constant>1000</constant>
                </delay>
                <log id="_log32" message="(L551) Esperando counterThread valor=${header.countThread.getCounter}"/>
            </loop>
            <log id="_log25" message="(L553) termina"/>
            <to id="_to26" uri="direct:termina"/>
        </route>
        <!-- ================================================================================================= -->
        <!--                               seda:sincronizaGrupo                                                -->
        <!-- ================================================================================================= -->
        <route id="_route3">
            <from id="_from6" uri="seda:sincronizaGrupo?concurrentConsumers=15"/>
            <log id="_log30" message="(L561-${threadName}) grupo a procesar: ${header.grupoGmail} countThread=${header.countThread}"/>
            <process id="_process7" ref="sincronizarGruposAction"/>
        </route>
        <!-- ================================================================================================= -->
        <!--      PARA PRUEBAS OFFLINE -->
        <!-- ================================================================================================= -->
        <route id="_testCreateGrupoGmailRoute">
            <from id="_from1" uri="direct:testCreateGrupoGmail"/>
            <bean id="_bean8" method="testCreateGrupoGmail" ref="generaDatos"/>
        </route>
        <route id="_testRecuperaGrupoGmailRoute">
            <from id="_from2" uri="direct:testRecuperaGrupoGmail"/>
            <bean id="_bean9" method="testRecuperaGrupoGmail" ref="generaDatos"/>
        </route>
        <route id="_testtestSacarMemberRoute">
            <from id="_from2" uri="direct:testSacarMember"/>
            <bean id="_bean10" method="testSacarMember" ref="generaDatos"/>
        </route>
        <route id="_testtestAgregarMemberRoute">
            <from id="_from2" uri="direct:testAgregarMember"/>
            <bean id="_bean11" method="testAgregarMember" ref="generaDatos"/>
        </route>
        <route id="_testtestDeleteGrupoGmailRoute">
            <from id="_from2" uri="direct:testDeleteGrupoGmail"/>
            <bean id="_bean12" method="testDeleteGrupoGmail" ref="generaDatos"/>
        </route>
    </camelContext>
</blueprint>

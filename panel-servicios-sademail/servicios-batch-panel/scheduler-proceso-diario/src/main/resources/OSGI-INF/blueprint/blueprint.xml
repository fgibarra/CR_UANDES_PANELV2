<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint https://camel.apache.org/schema/blueprint/camel-blueprint-2.20.2.xsd">
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- CXF servers -->
    <jaxrs:server address="/ESB/panel/servicioBatch/schedulerPanel/"
        id="rsPanelServices" staticSubresourceResolution="true">
        <jaxrs:serviceBeans>
            <ref component-id="restService"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
    <!-- Ejecutar proceso crear cuentas-->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/servicioBatch/crearCuentas/procese"
        id="servCreaCuentas" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.scheduler.api.restclient.ServicioCrearCuentasEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- Ejecutar proceso crear grupos-->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/servicioBatch/crearGrupos/procese"
        id="servCreaGrupos" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.scheduler.api.restclient.ServicioCrearGruposEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- Envio de correos-->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panelv2/servicio/sendmail/send"
        id="servSendmail" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.servicio.scheduler.api.restclient.ServicioSendmailEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <http-conf:conduit name="*.http-conduit">
        <http-conf:client ConnectionTimeout="5000" ReceiveTimeout="0"/>
    </http-conf:conduit>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <bean
        class="cl.uandes.panel.servicio.scheduler.api.resource.SchedulerPanelRestService" id="restService">
        <property name="procesoCrearCuentas" value="{{crear-cuentas-gmail.proceso}}"/>
        <property name="procesoCrearGrupos" value="{{crear-grupos-gmail.proceso}}"/>
        <property name="procesoCrearGruposInprogress" value="{{grupos_inprogress_gmail.proceso}}"/>
        <property name="procesoCrearGruposPosgrado" value="{{grupos_inprogress_postgrado_gmail.proceso}}"/>
		<property name="procesoSyncGruposGenerales" value="{{sinc_grupos_generales.operacion}}"/>
		<property name="procesoSyncGruposVigentes" value="{{sinc_grupos_vigentes.operacion}}"/>
		<property name="procesoSyncGruposPostgrado" value="{{sinc_grupos_postgrado.operacion}}"/>
    </bean>
    <bean class="cl.uandes.panel.servicio.scheduler.bean.GeneraDatos" id="generaDatos">
        <argument index="0" value="Alumnos"/>
        <argument index="1" value="crear_grupos"/>
        <argument index="2" value="grupos_inprogress"/>
        <argument index="3" value="grupos_inprogress_postgrado"/>
        <argument index="4" value="crear_cuentas"/>
        <argument index="5" value="generaGrupos"/>
        <property name="delegate" ref="restService"/>
    </bean>
    <bean
        class="cl.uandes.panel.servicio.scheduler.procesor.PreparaDatosMail" id="preparaDatosMail">
        <property name="asunto" value="{{scheduler.mail.asunto}}"/>
        <property name="from" value="{{serv.mailPanel.mail_from}}"/>
    </bean>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- ==================================================================================================== -->
    <reference availability="mandatory"
        filter="(osgi.jndi.service.name=bannerds)" id="bannerDataSource" interface="javax.sql.DataSource"/>
    <!-- ==================================================================================================== -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <camelContext id="scheduler-proceso-diario" trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="properties" location="file:${karaf.home}/etc/cl.uandes.panelv2.cfg"/>
        <!-- ================================================================================================= -->
        <route id="_route1">
            <!-- seconds+minutes+hours+day of month+month+day of week+year-->
            <!--  http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html -->
            <from id="_partiendo" uri="quartz2://horaProcesoActualizaIdGmail?cron={{scheduler.procesoDiario.cronexpr}}"/>
            <log id="_log1" message="partiendo un nuevo ciclo"/>
            <bean id="_bean2" method="generaRequestCrearCuentas" ref="generaDatos"/>
            <to id="_mandaEjecutarCrearCuentas" uri="cxfrs:bean:servCreaCuentas?timeout=-1"/>
            <log id="_log2" message="Crear cuenta avisa que partio: ${body}"/>
        </route>
        <!-- ================================================================================================= -->
        <route id="_readjson">
            <from id="_promService" uri="direct:start"/>
            <log id="_log3" message="queda en el body: ${body}"/>
            <to id="_final" uri="mock:end"/>
        </route>
        <!-- ================================================================================================= -->
        <route id="_terminaCrearCuentasRoute">
            <from id="_from2" uri="direct:terminaCrearCuentas"/>
            <setHeader headerName="resCrearCuenta" id="_setHeader1">
                <simple>${body}</simple>
            </setHeader>
            <!-- prepara el mail con los resultados guardados en MI_RESULTADOS -->
            <bean id="_bean3" method="preparaMailResultadoCrearCuentas" ref="generaDatos"/>
            <to id="_to2" uri="direct:generaMail"/>
            <bean id="_bean1" method="generaRequestCrearGupos" ref="generaDatos"/>
            <to id="_mandaEjecutarCrearGrupos" uri="cxfrs:bean:servCreaGrupos?timeout=-1"/>
        </route>
        <!-- ================================================================================================= -->
        <route id="_terminaCrearGruposRoute">
            <from id="_from3" uri="direct:terminaCrearGrupos"/>
            <setHeader headerName="resCrearGrupos" id="_setHeader2">
                <simple>${body}</simple>
            </setHeader>
            <!-- prepara el mail con los resultados guardados en MI_RESULTADOS -->
            <bean id="_bean4" method="preparaMailResultadoCrearGrupos" ref="generaDatos"/>
            <to id="mailResultado" uri="direct:generaMail"/>
        </route>
        <!-- ================================================================================================= -->
        <route id="_terminaSincronizarGruposRoute">
            <from id="_from3" uri="direct:terminaSincronizarGrupos"/>
            <setHeader headerName="resSincronizarGrupos">
                <simple>${body}</simple>
            </setHeader>
            <!-- prepara el mail con los resultados guardados en MI_RESULTADOS -->
            <bean method="preparaMailResultadoSincronizarGrupos" ref="generaDatos"/>
            <to uri="direct:generaMail"/>
        </route>
        <!-- ================================================================================================= -->
        <route id="_generaMailRoute">
            <from id="_from1" uri="direct:generaMail"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${header.proceso} == '{{crear-cuentas-gmail.proceso}}'</simple>
                    <to id="creaCuerpoCuentas" uri="velocity:templateMailCrearCuentas.vm?contentCache=true"/>
                </when>
                <when >
                    <simple>${header.proceso} == '{{crear-grupos-gmail.proceso}}'</simple>
                    <to id="creaCuerpoGrupos" uri="velocity:templateMailCrearGrupos.vm?contentCache=true"/>
                </when>
                <when >
                    <simple>${header.proceso} == '{{sinc_grupos-gmail.nocturno.funcion}}'</simple>
                    <to id="creaCuerpoSync" uri="velocity:templateMailSincronizaGrupos.vm?contentCache=true"/>
                </when>
                <otherwise id="_otherwise1">
                    <log message="NO HAY PROCESO PARA (${header.proceso})"/>
                </otherwise>
            </choice>
            <process id="_preparaDatosMail" ref="preparaDatosMail"/>
            <!-- manda email -->
            <to id="_to1" uri="cxfrs:bean:servSendmail?timeout=-1"/>
        </route>
    </camelContext>
</blueprint>

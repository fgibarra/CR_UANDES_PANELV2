<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint https://camel.apache.org/schema/blueprint/camel-blueprint-2.20.2.xsd">
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- CXF servers -->
    <jaxrs:server address="/ESB/panel/panelToolCrearCuentas/"
        id="rsPanelServices" staticSubresourceResolution="true">
        <jaxrs:serviceBeans>
            <ref component-id="restService"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- crear cuenta panel -->
    <cxf:rsClient
        address="http://localhost:8181/cxf/ESB/panel/panelToolCreaCuenta/creaCuenta"
        id="creaCuentaPanel" loggingFeatureEnabled="true" serviceClass="cl.uandes.panel.apiCrearCuentasServices.api.restclient.CrearCuentaEndpoint">
        <cxf:headers>
            <entry key="Content-Type" value="application/json"/>
            <entry key="Accept" value="application/json"/>
        </cxf:headers>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsClient>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <bean
        class="cl.uandes.panel.apiCrearCuentasServices.api.resources.CrearCuentasRestService" id="restService"/>
    <bean
        class="cl.uandes.panel.apiCrearCuentasServices.procesor.PreparaTemplateMail" id="preparaTemplateMail"/>
    <bean
        class="cl.uandes.panel.apiCrearCuentasServices.procesor.PreparaDatosMail" id="preparaDatosMail"/>
    <bean
        class="cl.uandes.panel.apiCrearCuentasServices.procesor.InvocaCreaCuenta" id="invocaCreaCuenta"/>
    <bean
        class="cl.uandes.panel.apiCrearCuentasServices.procesor.PreparaResponse" id="preparaResponse"/>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <http-conf:conduit name="*.http-conduit">
        <http-conf:client ReceiveTimeout="6000000"/>
        <!-- 1 minuto -->
    </http-conf:conduit>
    <!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -->
    <!-- ==================================================================================================== -->
    <reference availability="mandatory"
        filter="(osgi.jndi.service.name=bannerds)" id="bannerDataSource" interface="javax.sql.DataSource"/>
    <!-- ==================================================================================================== -->
    <camelContext id="serv-crear-cuentas-panel" trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="properties" location="file:${karaf.home}/etc/cl.uandes.panelv2.cfg"/>
        <route id="_readjson">
            <from id="_promService" uri="direct:start?timeout=-1"/>
            <!-- loop
					- para cada elemento en la lista invocar al servicio serv-crear-cuenta-v1
					- el resultado guardarlo en lista de resultados para generar informe
				- fin loop
				- generar email con informe
				-enviarlo al correo indicado en el request
				-generar la respuesta 
			-->
            <loop doWhile="true" id="_loopProcesaDatos">
                <simple>${header.crearCuentas.size} &gt; 0</simple>
                <process id="_invocaCreaCuenta" ref="invocaCreaCuenta"/>
            </loop>
            <to id="_generaMail2" uri="seda:generaMail"/>
            <!-- generar la respuesta al servicio -->
            <process id="_preparaResponse" ref="preparaResponse"/>
        </route>
        <!-- ==================================================================================================== -->
        <route id="_generaMailRoute">
            <from id="_from1" uri="seda:generaMail"/>
            <process id="_preparaTemplateMail" ref="preparaTemplateMail"/>
            <to id="creaCuerpo" uri="velocity:templateMail.vm?contentCache=true"/>
            <process id="_preparaDatosMail" ref="preparaDatosMail"/>
            <!-- manda email -->
            <setHeader headerName="cc" id="_setHeaderContent">
                <simple>{{serv.mailPanel.mail_cc}}</simple>
            </setHeader>
            <setHeader headerName="contentType" id="_setHeaderContent">
                <simple>text/html;charset=ISO-8859-1</simple>
            </setHeader>
            <to id="_to1" uri="smtps://smtp.gmail.com?username={{serv.mailPanel.mail_username}}&amp;password={{serv.mailPanel.mail_password}}&amp;from={{serv.mailPanel.mail_from}}&amp;contentType=text/html;charset=ISO-8859-1"/>
        </route>
    </camelContext>
</blueprint>

package cl.uandes.sadmemail.apiGmailServices.api.resources;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.GET;
import javax.ws.rs.PUT;
import javax.ws.rs.DELETE;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.camel.EndpointInject;
import org.apache.camel.ProducerTemplate;
import org.apache.karaf.shell.api.action.lifecycle.Reference;
import org.apache.log4j.Logger;

import cl.uandes.sadmemail.apiGmailServices.model.hibernate.service.ParametersServiceImpl;
import cl.uandes.sadmemail.comunes.gmail.json.AliasRequest;
import cl.uandes.sadmemail.comunes.gmail.json.AliasResponse;
import cl.uandes.sadmemail.comunes.gmail.json.AliasesResponse;
import cl.uandes.sadmemail.comunes.gmail.json.GroupRequest;
import cl.uandes.sadmemail.comunes.gmail.json.GroupResponse;
import cl.uandes.sadmemail.comunes.gmail.json.GroupsResponse;
import cl.uandes.sadmemail.comunes.gmail.json.MemberRequest;
import cl.uandes.sadmemail.comunes.gmail.json.MemberResponse;
import cl.uandes.sadmemail.comunes.gmail.json.MembersRequest;
import cl.uandes.sadmemail.comunes.gmail.json.MembersResponse;
import cl.uandes.sadmemail.comunes.gmail.json.UserRequest;
import cl.uandes.sadmemail.comunes.gmail.json.UserResponse;
import cl.uandes.sadmemail.comunes.utils.StringUtils;

/**
 * URI : cxf/ESB/panelv2/gmailServices/
 * @author fernando
 *
 */
@Path("/")
public class GmailServicesRestService {

	@EndpointInject(uri = "direct:start")
	ProducerTemplate producer;

	@Reference
	ParametersServiceImpl daoService;

	Logger logger = Logger.getLogger(getClass());

	public static GmailServicesRestService factory() {
		GmailServicesRestService service = new GmailServicesRestService();
		service.logger.info(String.format("Construyendo GmailServicesRestService: %s", 
				StringUtils.DIAHORA_DATE_FORMATTER.format(new java.util.Date())));
		service.logger.info(String.format("Construyendo: daoService(0) es %s nulo", service.daoService!=null?"NO":"LAMENTABLEMENTE"));
		if (service.daoService == null)
			service.daoService = new ParametersServiceImpl();
		
		service.logger.info(String.format("Construyendo: em(0) es %s nulo", service.daoService.getEm()!=null?"NO":"LAMENTABLEMENTE"));
			
		return service;
	}
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/user/create")
	public UserResponse createUser(UserRequest in_msg) {
		logger.info(String.format("createUser: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (UserResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "user-create");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/user/retrieve/{username}")
	public UserResponse retrieveUser(@PathParam("username")String in_msg) {
		logger.info(String.format("retrieveUser: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (UserResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "user-retrieve");
	}
	
	@PUT
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/user/update")
	public UserResponse updateUser(UserRequest in_msg) {
		logger.info(String.format("updateUser: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (UserResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "user-update");
	}
	
	@PUT
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/user/retrieve/{username}")
	public UserResponse forceUserToChangePassword(@PathParam("username")String in_msg) {
		logger.info(String.format("forceUserToChangePassword: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (UserResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "user-forceToChangePassword");
	}
	
	@PUT
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/user/suspend/{username}")
	public Response suspendUser(@PathParam("username")String in_msg) {
		logger.info(String.format("suspendUser: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "user-suspend");
	}
	
	@PUT
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/user/reactivar/{username}")
	public Response reactivarUser(@PathParam("username")String in_msg) {
		logger.info(String.format("reactivarUser: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "user-reactivar");
	}
	
	@DELETE
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/user/delete/{username}")
	public Response deleteUser(@PathParam("username")String in_msg) {
		logger.info(String.format("deleteUser: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "user-delete");
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/nickName/create")
	public AliasResponse createNickname(AliasRequest in_msg) {
		logger.info(String.format("createNickname: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (AliasResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "nickname-create");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/nickName/retrieve/{username}")
	public AliasResponse retrieveNickname(@PathParam("username")String in_msg) {
		logger.info(String.format("retrieveNickname: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (AliasResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "nickname-retrieve");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/nickNames/retrieve/{username}")
	public AliasesResponse retrieveNicknames(@PathParam("username")String in_msg) {
		logger.info(String.format("retrieveNicknames: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (AliasesResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "nicknames-retrieve");
	}
	
	@DELETE
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/nickName/delete/{username}")
	public Response deleteNickname(@PathParam("username")String in_msg) {
		logger.info(String.format("deleteNickname: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "nickname-delete");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/groups/retrieve/{username}")
	public GroupsResponse retrieveGroups(@PathParam("username")String in_msg) {
		logger.info(String.format("retrieveGroups: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (GroupsResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "groups-retrieve");
	}

	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/groups/retrieveAll/{pageToken}")
	public GroupsResponse retrieveAllGroups(@PathParam("pageToken")String in_msg) {
		logger.info(String.format("retrieveAllGroups: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (GroupsResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "groups-retrieveAll");
	}
	

	@GET
	@Consumes(MediaType.TEXT_HTML)
	@Produces(MediaType.TEXT_HTML+"; charset=UTF-8")
    @Path("/group/retrieveSettings/{groupName}")
	public String retrieveGroupSettings(@PathParam("groupName")String in_msg) {
		logger.info(String.format("retrieveGroupSettings: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (String) producer.requestBodyAndHeader(in_msg, "Operacion", "group-retrieveSettings");
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/group/create")
	public GroupResponse createGroup(GroupRequest in_msg) {
		logger.info(String.format("createGroup: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (GroupResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "group-create");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/group/retrieve/{groupName}")
	public GroupResponse retrieveGroup(@PathParam("groupName")String in_msg) {
		logger.info(String.format("retrieveGroup: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (GroupResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "group-retrieve");
	}
	
	@PUT
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/group/update")
	public GroupResponse updateGroup(GroupRequest in_msg) {
		logger.info(String.format("updateGroup: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (GroupResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "group-update");
	}
	
	@DELETE
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/group/delete/{groupName}")
	public Response deleteGroup(@PathParam("groupName")String in_msg) {
		logger.info(String.format("deleteGroup: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "group-delete");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/member/isOwner")
	public Response isOwner(MemberRequest in_msg) {
		logger.info(String.format("isOwner: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "member-isOwner");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/member/isMember")
	public Response isMember(MemberRequest in_msg) {
		logger.info(String.format("isMember: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "member-isMember");
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/member/addOwner")
	public MemberResponse addOwnerToGroup(MemberRequest in_msg) {
		logger.info(String.format("addOwnerToGroup: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (MemberResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "member-addOwner");
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/member/addMember")
	public MemberResponse addMemberToGroup(MemberRequest in_msg) {
		logger.info(String.format("addMemberToGroup: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (MemberResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "member-addMember");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/member/retrieve")
	public MemberResponse retrieveMember(MemberRequest in_msg) {
		logger.info(String.format("retrieveMember: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (MemberResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "member-retrieve");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/members/retreiveOwners")
	public MembersResponse retreiveGroupOwners(MembersRequest in_msg) {
		logger.info(String.format("retreiveGroupOwners: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (MembersResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "members-retrieveOwners");
	}
	
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/members/retreiveMembers")
	public MembersResponse retrieveAllMembers(MembersRequest in_msg) {
		logger.info(String.format("retrieveAllMembers: in_msg= %s - %s", in_msg.getClass().getSimpleName(), in_msg));
		return (MembersResponse) producer.requestBodyAndHeader(in_msg, "Operacion", "members-retreiveMembers");
	}
	
	@DELETE
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/member/deleteMember")
	public Response deleteMemberFromGroup(MembersRequest in_msg) {
		logger.info(String.format("deleteMemberFromGroup: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "member-deleteMember");
	}
	
	@DELETE
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON+"; charset=UTF-8")
    @Path("/member/deleteOwner")
	public Response deleteOwnerFromGroup(MembersRequest in_msg) {
		logger.info(String.format("deleteOwnerFromGroup: in_msg: %s - %s", 
				in_msg.getClass().getSimpleName(), in_msg));
		return (Response) producer.requestBodyAndHeader(in_msg, "Operacion", "member-deleteOwner");
	}
	
}
